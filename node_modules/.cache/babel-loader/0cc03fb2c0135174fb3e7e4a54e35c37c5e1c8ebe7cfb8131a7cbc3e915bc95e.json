{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diya\\\\Desktop\\\\Diya\\\\College\\\\SEM4\\\\DBMS\\\\GroceryStoreManagement\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const toggleChatbot = () => {\n    setIsOpen(!isOpen);\n  };\n  const sendMessage = () => {\n    if (input.trim() === \"\") return; // Prevent empty messages\n    setMessages([...messages, {\n      text: input,\n      type: \"user\"\n    }]);\n    setInput(\"\");\n\n    // Simulate bot response\n    setTimeout(() => {\n      setMessages(prevMessages => [...prevMessages, {\n        text: \"Hi, I'm VeggieBot! How can I help?\",\n        type: \"bot\"\n      }]);\n    }, 1000);\n  };\n\n  // Handle enter key press\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggle\",\n      onClick: toggleChatbot,\n      children: \"\\uD83D\\uDCAC Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [\"Chatbot\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: toggleChatbot,\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${msg.type}`,\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: handleKeyPress // Listen for Enter key\n          ,\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Chatbot, \"3FjPpeSK8jKr7SJKPBRprHyy0lU=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","isOpen","setIsOpen","messages","setMessages","input","setInput","toggleChatbot","sendMessage","trim","text","type","setTimeout","prevMessages","handleKeyPress","e","key","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","value","onChange","target","onKeyPress","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Diya/Desktop/Diya/College/SEM4/DBMS/GroceryStoreManagement/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Chatbot.css\";\r\n\r\nfunction Chatbot() {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const toggleChatbot = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    const sendMessage = () => {\r\n        if (input.trim() === \"\") return; // Prevent empty messages\r\n        setMessages([...messages, { text: input, type: \"user\" }]);\r\n        setInput(\"\");\r\n\r\n        // Simulate bot response\r\n        setTimeout(() => {\r\n            setMessages((prevMessages) => [\r\n                ...prevMessages,\r\n                { text: \"Hi, I'm VeggieBot! How can I help?\", type: \"bot\" },\r\n            ]);\r\n        }, 1000);\r\n    };\r\n\r\n    // Handle enter key press\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            sendMessage();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chatbot-container\">\r\n            <button className=\"chatbot-toggle\" onClick={toggleChatbot}>\r\n                ðŸ’¬ Chat\r\n            </button>\r\n\r\n            {isOpen && (\r\n                <div className=\"chatbot-box\">\r\n                    <div className=\"chatbot-header\">\r\n                        Chatbot\r\n                        <button className=\"close-btn\" onClick={toggleChatbot}>âœ–</button>\r\n                    </div>\r\n                    <div className=\"chatbot-messages\">\r\n                        {messages.map((msg, index) => (\r\n                            <div key={index} className={`chat-message ${msg.type}`}>\r\n                                {msg.text}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"chatbot-input\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={input}\r\n                            onChange={(e) => setInput(e.target.value)}\r\n                            onKeyPress={handleKeyPress} // Listen for Enter key\r\n                            placeholder=\"Type a message...\"\r\n                        />\r\n                        <button onClick={sendMessage}>Send</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}